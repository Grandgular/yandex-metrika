import { Injectable, PLATFORM_ID, inject, isDevMode } from '@angular/core';
import { isPlatformBrowser } from '@angular/common';
import { YM_CONFIG_TOKEN, YM_DEFAULT_CONFIG_TOKEN } from './ym-config-token';
import { YMConfig } from './ym-config-interface';
import { libName } from './ym-lib-name';
import { YMMethod } from './ym-method-enum';
import { KNOWN_METHODS, KnownMethodArgs, YMMethodArgs, YMMethodType } from './ym-method-args-type';
import { YMEcommerceService } from './ym-ecommerce/ym-ecommerce-service';

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–æ–π –≤ Angular –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö
 *
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π API –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å API –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏ —Å –ø–æ–ª–Ω–æ–π TypeScript –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π,
 * –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ç–∏–ø–æ–≤ –∏ –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ –º–µ—Ç–æ–¥—ã API, —Ä–∞–±–æ—Ç—É —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å—á–µ—Ç—á–∏–∫–∞–º–∏
 * –∏ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
 *
 * @example
 * // –í–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
 * private metrika = inject(YMService);
 *
 * // –ë–∞–∑–æ–≤—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
 * trackPageView() {
 *   this.metrika.hit('/page-url');
 * }
 *
 * trackGoal() {
 *   this.metrika.reachGoal('purchase', { order_price: 1000 });
 * }
 *
 * trackUser() {
 *   this.metrika.setUserID('user-123');
 * }
 *
 * // –†–∞–±–æ—Ç–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å—á–µ—Ç—á–∏–∫–∞–º–∏
 * trackWithCustomCounter() {
 *   this.metrika.hitWithCounter('secondary', '/page');
 * }
 *
 * // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤
 * customTracking() {
 *   this.metrika.execute('customMethod', 'data');
 *   this.metrika.executeWithCounter('analytics', YMMethod.Hit, '/page');
 * }
 *
 * // Chaining –ø—Ä–∏–º–µ—Ä—ã
 * trackUserJourney() {
 *   this.metrika
 *     .hit('/page')
 *     .reachGoal('view')
 *     .setUserID('user-123');
 * }
 *
 * @remarks
 * - üõ°Ô∏è –ü–æ–ª–Ω–∞—è —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Å –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º –¥–ª—è –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤ API
 * - üîß –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–∞–∫ enum (YMMethod), —Ç–∞–∫ –∏ —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –ª–∏—Ç–µ—Ä–∞–ª–æ–≤
 * - üéØ –†–∞–±–æ—Ç–∞ —Å –æ–¥–Ω–∏–º –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Å—á–µ—Ç—á–∏–∫–∞–º–∏
 * - üåê SSR-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å (Angular Universal)
 * - üöÄ Production-–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ (prodOnly —Ñ–ª–∞–≥)
 * - ‚ö° –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è (–±—Ä–∞—É–∑–µ—Ä, –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API)
 * - üìù –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ–ø–µ—á–∞—Ç–∫–∞—Ö –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö –º–µ—Ç–æ–¥–æ–≤
 * - ‚õìÔ∏è Chaining –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏ –≤—ã–∑–æ–≤–æ–≤
 * - üìö –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ API –≤—ã–∑–æ–≤–∞ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏
 * - üîÑ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã execute() –∏ executeWithCounter() –¥–ª—è –≥–∏–±–∫–æ—Å—Ç–∏
 *
 * ## –£—Ä–æ–≤–Ω–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ API:
 *
 * ### 1. –°–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
 * –ü–æ–ª–Ω–æ—Å—Ç—å—é —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ API –≤—ã–∑–æ–≤–∞:
 * - `hit()`, `reachGoal()`, `setUserID()` –∏ –¥—Ä—É–≥–∏–µ
 * - `methodNameWithCounter()` –≤–µ—Ä—Å–∏–∏ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö —Å—á–µ—Ç—á–∏–∫–æ–≤
 *
 * ### 2. –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã (–¥–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—ã—Ö —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤)
 * –ì–∏–±–∫–∏–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤:
 * - `execute(method, ...args)` - –¥–ª—è —Å—á–µ—Ç—á–∏–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 * - `executeWithCounter(counter, method, ...args)` - –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞
 *
 * ### 3. –ù–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π –º–µ—Ç–æ–¥ (—É—Å—Ç–∞—Ä–µ–≤—à–∏–π)
 * - `ym()` - –ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤ API (deprecated, –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –≤ –±—É–¥—É—â–∏—Ö –≤–µ—Ä—Å–∏—è—Ö)
 *
 * @see YMConfig - –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤
 * @see provideYandexMetrika - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–≤
 * @see YMMethod - Enum –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ API
 * @see YMMethodArgs - –¢–∏–ø—ã –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –≤—Å–µ—Ö –º–µ—Ç–æ–¥–æ–≤
 *
 * @publicApi
 */
@Injectable({ providedIn: 'root' })
export class YMService {
  readonly #configs = inject(YM_CONFIG_TOKEN, { optional: true });
  readonly #defaultConfig = inject(YM_DEFAULT_CONFIG_TOKEN, { optional: true });
  readonly #isBrowser = isPlatformBrowser(inject(PLATFORM_ID));

  // ====================== ECOMMERCE –°–ï–†–í–ò–° ======================

  public readonly ecommerce = inject(YMEcommerceService);

  // ==================== –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ ====================

  /**
   * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –≤—ã–∑–æ–≤–∞ –ª—é–±–æ–≥–æ –º–µ—Ç–æ–¥–∞ API –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏.
   * @deprecated –°—Ç–∞–Ω–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–º –≤ —Å–ª–µ–¥—É—é—â–µ–π –º–∞–∂–æ—Ä–Ω–æ–π –≤–µ—Ä—Å–∏–∏. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–µ—Ç–æ–¥—ã execute –∏ executeWithCounter.
   */
  public ym(counterIdOrName: number | string, ...args: unknown[]): void;
  public ym(...args: unknown[]): void;

  public ym(...args: unknown[]): void {
    if (args.length === 0) {
      console.warn(`${libName}: –ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω—ã –∞—Ä–≥—É–º–µ–Ω—Ç—ã`);
      return;
    }

    const firstArg = args[0];
    const isFirstArgId = typeof firstArg === 'number';
    const isFirstArgName = typeof firstArg === 'string' && this.isCounterName(firstArg);

    let counterIdentifier: string | number | undefined;
    let methodArgs: unknown[];
    let targetCounterId: number | undefined;

    if (isFirstArgId) {
      counterIdentifier = firstArg;
      methodArgs = args.slice(1);
      targetCounterId = firstArg;
    } else if (isFirstArgName) {
      counterIdentifier = firstArg;
      methodArgs = args.slice(1);
      targetCounterId = this.getCounterIdByName(firstArg);
    } else {
      methodArgs = args;
      targetCounterId = this.#defaultConfig?.id;
    }

    if (!this.canExecute(counterIdentifier)) return;

    if (!targetCounterId) {
      console.warn(`${libName}: –ù–µ –Ω–∞–π–¥–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π ID —Å—á–µ—Ç—á–∏–∫–∞`);
      return;
    }

    if (methodArgs.length === 0) {
      console.warn(`${libName}: –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞`);
      return;
    }

    const methodName = methodArgs[0];

    if (typeof methodName !== 'string') {
      console.warn(`${libName}: –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Å—Ç—Ä–æ–∫–æ–π`);
      return;
    }

    try {
      (window as any).ym(targetCounterId, ...methodArgs);
    } catch (error) {
      console.error(`${libName}: –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ –º–µ—Ç–æ–¥–∞: `, error, {
        counterId: targetCounterId,
        methodArgs,
      });
    }
  }

  /**
   * –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ API –¥–ª—è —Å—á–µ—Ç—á–∏–∫–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
   *
   * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ –º–µ—Ç–æ–¥—ã –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏ —Å –ø–æ–ª–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ç–∏–ø–æ–≤ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤.
   * –ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å.
   *
   * @param method - –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ (enum, —Å—Ç—Ä–æ–∫–æ–≤—ã–π –ª–∏—Ç–µ—Ä–∞–ª –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞)
   * @param args - –ê—Ä–≥—É–º–µ–Ω—Ç—ã –º–µ—Ç–æ–¥–∞ —Å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é –¥–ª—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
   * @returns this –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ chaining
   *
   * @example
   * // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ enum (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
   * this.metrika.execute(YMMethod.Hit, '/page');
   *
   * // –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–æ–≤–æ–≥–æ –ª–∏—Ç–µ—Ä–∞–ª–∞
   * this.metrika.execute('reachGoal', 'purchase', { order_price: 1000 });
   *
   * // –ü—Ä–æ–∏–∑–≤–æ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ (—Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ–º)
   * this.metrika.execute('customMethod', 'data');
   *
   * // Chaining
   * this.metrika
   *   .execute(YMMethod.Hit, '/page')
   *   .execute('reachGoal', 'view')
   *   .execute(YMMethod.SetUserID, 'user-123');
   */
  public execute<T extends YMMethodType>(method: T, ...args: KnownMethodArgs<T>): this {
    this.validateMethod(method);
    this.ym(method as any, ...args);
    return this;
  }

  /**
   * –¢–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω—ã–π –≤—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ API –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞
   *
   * –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –º–µ—Ç–æ–¥—É execute, –Ω–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç —è–≤–Ω–æ —É–∫–∞–∑–∞—Ç—å —Ü–µ–ª–µ–≤–æ–π —Å—á–µ—Ç—á–∏–∫
   * –ø–æ –µ–≥–æ ID –∏–ª–∏ –∏–º–µ–Ω–∏.
   *
   * @param counterIdOrName - ID —Å—á–µ—Ç—á–∏–∫–∞ –∏–ª–∏ –µ–≥–æ –∏–º—è –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
   * @param method - –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ (enum, —Å—Ç—Ä–æ–∫–æ–≤—ã–π –ª–∏—Ç–µ—Ä–∞–ª –∏–ª–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞)
   * @param args - –ê—Ä–≥—É–º–µ–Ω—Ç—ã –º–µ—Ç–æ–¥–∞ —Å —Ç–∏–ø–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é –¥–ª—è –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤
   * @returns this –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ chaining
   *
   * @example
   * // –ü–æ ID —Å—á–µ—Ç—á–∏–∫–∞
   * this.metrika.executeWithCounter(1234567, YMMethod.Hit, '/page');
   *
   * // –ü–æ –∏–º–µ–Ω–∏ —Å—á–µ—Ç—á–∏–∫–∞
   * this.metrika.executeWithCounter('secondary', 'reachGoal', 'signup');
   *
   * // Chaining
   * this.metrika
   *   .executeWithCounter('main', YMMethod.Hit, '/page')
   *   .executeWithCounter('secondary', YMMethod.ReachGoal, 'conversion');
   */
  public executeWithCounter<T extends YMMethodType>(
    counterIdOrName: number | string,
    method: T,
    ...args: KnownMethodArgs<T>
  ): this {
    this.validateMethod(method);
    this.ym(counterIdOrName, method as any, ...args);
    return this;
  }

  // ==================== –°–ü–ï–¶–ò–ê–õ–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –ú–ï–¢–û–î–´ ====================

  /**
   * –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞
   * @see https://yandex.ru/support/metrica/ru/objects/addfileextension
   */
  public addFileExtension(...args: YMMethodArgs[YMMethod.AddFileExtension]): this {
    return this.execute(YMMethod.AddFileExtension, ...args);
  }

  /**
   * –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞ (–¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞)
   * @see https://yandex.ru/support/metrica/ru/objects/addfileextension
   */
  public addFileExtensionWithCounter(
    counterIdOrName: number | string,
    ...args: YMMethodArgs[YMMethod.AddFileExtension]
  ): this {
    return this.executeWithCounter(counterIdOrName, YMMethod.AddFileExtension, ...args);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –ø–æ –≤–Ω–µ—à–Ω–µ–π —Å—Å—ã–ª–∫–µ
   * @see https://yandex.ru/support/metrica/ru/objects/extlink
   */
  public extLink(...args: YMMethodArgs[YMMethod.ExtLink]): this {
    return this.execute(YMMethod.ExtLink, ...args);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–µ—Ä–µ—Ö–æ–¥–µ –ø–æ –≤–Ω–µ—à–Ω–µ–π —Å—Å—ã–ª–∫–µ (–¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞)
   * @see https://yandex.ru/support/metrica/ru/objects/extlink
   */
  public extLinkWithCounter(
    counterIdOrName: number | string,
    ...args: YMMethodArgs[YMMethod.ExtLink]
  ): this {
    return this.executeWithCounter(counterIdOrName, YMMethod.ExtLink, ...args);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞
   * @see https://yandex.ru/support/metrica/ru/objects/file
   */
  public file(...args: YMMethodArgs[YMMethod.File]): this {
    return this.execute(YMMethod.File, ...args);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ (–¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞)
   * @see https://yandex.ru/support/metrica/ru/objects/file
   */
  public fileWithCounter(
    counterIdOrName: number | string,
    ...args: YMMethodArgs[YMMethod.File]
  ): this {
    return this.executeWithCounter(counterIdOrName, YMMethod.File, ...args);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π —Å–∞–π—Ç–∞
   * @see https://yandex.ru/support/metrica/ru/objects/first-party-params
   */
  public firstPartyParams(...args: YMMethodArgs[YMMethod.FirstPartyParams]): this {
    return this.execute(YMMethod.FirstPartyParams, ...args);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π —Å–∞–π—Ç–∞ (–¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞)
   * @see https://yandex.ru/support/metrica/ru/objects/first-party-params
   */
  public firstPartyParamsWithCounter(
    counterIdOrName: number | string,
    ...args: YMMethodArgs[YMMethod.FirstPartyParams]
  ): this {
    return this.executeWithCounter(counterIdOrName, YMMethod.FirstPartyParams, ...args);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π —Å–∞–π—Ç–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–≥–æ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
   * @see https://yandex.ru/support/metrica/ru/objects/first-party-params-hash
   */
  public firstPartyParamsHashed(...args: YMMethodArgs[YMMethod.FirstPartyParamsHashed]): this {
    return this.execute(YMMethod.FirstPartyParamsHashed, ...args);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π —Å–∞–π—Ç–∞ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ–≥–æ —Ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö (–¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞)
   * @see https://yandex.ru/support/metrica/ru/objects/first-party-params-hash
   */
  public firstPartyParamsHashedWithCounter(
    counterIdOrName: number | string,
    ...args: YMMethodArgs[YMMethod.FirstPartyParamsHashed]
  ): this {
    return this.executeWithCounter(counterIdOrName, YMMethod.FirstPartyParamsHashed, ...args);
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è, –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ú–µ—Ç—Ä–∏–∫–æ–π
   * @see https://yandex.ru/support/metrica/ru/objects/get-client-id
   */
  public getClientID(...args: YMMethodArgs[YMMethod.GetClientID]): this {
    return this.execute(YMMethod.GetClientID, ...args);
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è, –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ú–µ—Ç—Ä–∏–∫–æ–π (–¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞)
   * @see https://yandex.ru/support/metrica/ru/objects/get-client-id
   */
  public getClientIDWithCounter(
    counterIdOrName: number | string,
    ...args: YMMethodArgs[YMMethod.GetClientID]
  ): this {
    return this.executeWithCounter(counterIdOrName, YMMethod.GetClientID, ...args);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Ä—É—á–Ω—É—é –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞—Ö –¥–ª—è AJAX- –∏ Flash-—Å–∞–π—Ç–æ–≤
   * @see https://yandex.ru/support/metrica/ru/objects/hit
   */
  public hit(...args: YMMethodArgs[YMMethod.Hit]): this {
    return this.execute(YMMethod.Hit, ...args);
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Ä—É—á–Ω—É—é –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞—Ö –¥–ª—è AJAX- –∏ Flash-—Å–∞–π—Ç–æ–≤ (–¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞)
   * @see https://yandex.ru/support/metrica/ru/objects/hit
   */
  public hitWithCounter(
    counterIdOrName: number | string,
    ...args: YMMethodArgs[YMMethod.Hit]
  ): this {
    return this.executeWithCounter(counterIdOrName, YMMethod.Hit, ...args);
  }

  /**
   * –ü–µ—Ä–µ–¥–∞—á–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–º, —á—Ç–æ –≤–∏–∑–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–∫–∞–∑–æ–º
   * @see https://yandex.ru/support/metrica/ru/objects/notbounce
   */
  public notBounce(...args: YMMethodArgs[YMMethod.NotBounce]): this {
    return this.execute(YMMethod.NotBounce, ...args);
  }

  /**
   * –ü–µ—Ä–µ–¥–∞—á–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–º, —á—Ç–æ –≤–∏–∑–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–∫–∞–∑–æ–º (–¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞)
   * @see https://yandex.ru/support/metrica/ru/objects/notbounce
   */
  public notBounceWithCounter(
    counterIdOrName: number | string,
    ...args: YMMethodArgs[YMMethod.NotBounce]
  ): this {
    return this.executeWithCounter(counterIdOrName, YMMethod.NotBounce, ...args);
  }

  /**
   * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –æ—Ç—á–µ—Ç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∏–∑–∏—Ç–æ–≤
   * @see https://yandex.ru/support/metrica/ru/objects/params-method
   */
  public params(...args: YMMethodArgs[YMMethod.Params]): this {
    return this.execute(YMMethod.Params, ...args);
  }

  /**
   * –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–µ—Ä–µ–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –æ—Ç—á–µ—Ç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≤–∏–∑–∏—Ç–æ–≤ (–¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞)
   * @see https://yandex.ru/support/metrica/ru/objects/params-method
   */
  public paramsWithCounter(
    counterIdOrName: number | string,
    ...args: YMMethodArgs[YMMethod.Params]
  ): this {
    return this.executeWithCounter(counterIdOrName, YMMethod.Params, ...args);
  }

  /**
   * –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–∏
   * @see https://yandex.ru/support/metrica/ru/objects/reachgoal
   */
  public reachGoal(...args: YMMethodArgs[YMMethod.ReachGoal]): this {
    return this.execute(YMMethod.ReachGoal, ...args);
  }

  /**
   * –î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ —Ü–µ–ª–∏ (–¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞)
   * @see https://yandex.ru/support/metrica/ru/objects/reachgoal
   */
  public reachGoalWithCounter(
    counterIdOrName: number | string,
    ...args: YMMethodArgs[YMMethod.ReachGoal]
  ): this {
    return this.executeWithCounter(counterIdOrName, YMMethod.ReachGoal, ...args);
  }

  /**
   * –ü–µ—Ä–µ–¥–∞—á–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è, –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —Å–∞–π—Ç–∞
   * @see https://yandex.ru/support/metrica/ru/objects/set-user-id
   */
  public setUserID(...args: YMMethodArgs[YMMethod.SetUserID]): this {
    return this.execute(YMMethod.SetUserID, ...args);
  }

  /**
   * –ü–µ—Ä–µ–¥–∞—á–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è, –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –≤–ª–∞–¥–µ–ª—å—Ü–µ–º —Å–∞–π—Ç–∞ (–¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞)
   * @see https://yandex.ru/support/metrica/ru/objects/set-user-id
   */
  public setUserIDWithCounter(
    counterIdOrName: number | string,
    ...args: YMMethodArgs[YMMethod.SetUserID]
  ): this {
    return this.executeWithCounter(counterIdOrName, YMMethod.SetUserID, ...args);
  }

  /**
   * –°–ø–æ—Å–æ–± –ø–µ—Ä–µ–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –æ—Ç—á–µ—Ç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π
   * @see https://yandex.ru/support/metrica/ru/objects/user-params
   */
  public userParams(...args: YMMethodArgs[YMMethod.UserParams]): this {
    return this.execute(YMMethod.UserParams, ...args);
  }

  /**
   * –°–ø–æ—Å–æ–± –ø–µ—Ä–µ–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –≤ –æ—Ç—á–µ—Ç –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π (–¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å—á–µ—Ç—á–∏–∫–∞)
   * @see https://yandex.ru/support/metrica/ru/objects/user-params
   */
  public userParamsWithCounter(
    counterIdOrName: number | string,
    ...args: YMMethodArgs[YMMethod.UserParams]
  ): this {
    return this.executeWithCounter(counterIdOrName, YMMethod.UserParams, ...args);
  }

  // ==================== –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ ====================

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –º–µ—Ç–æ–¥ –∏ –≤—ã–≤–æ–¥–∏—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ –º–µ—Ç–æ–¥ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω
   */
  private validateMethod(method: YMMethodType): void {
    if (typeof method !== 'string') return;

    const methodName = method as string;

    if (!KNOWN_METHODS.has(methodName as YMMethod)) {
      console.warn(
        `${libName}: –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –º–µ—Ç–æ–¥ "${methodName}". ` +
          `–í–æ–∑–º–æ–∂–Ω–∞ –æ–ø–µ—á–∞—Ç–∫–∞. –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã: ${Array.from(KNOWN_METHODS).join(', ')}`,
      );
    }
  }

  private isCounterName(name: string): boolean {
    return this.#configs?.some((config) => config.name === name) ?? false;
  }

  private getCounterIdByName(name: string): number | undefined {
    return this.#configs?.find((config) => config.name === name)?.id;
  }

  private canExecute(counterIdOrName?: string | number): boolean {
    if (!this.#isBrowser || typeof (window as any).ym !== 'function') return false;

    if (!this.#configs || this.#configs.length === 0) {
      console.warn(`${libName}: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã —Å—á–µ—Ç—á–∏–∫–∏`);
      return false;
    }

    if (counterIdOrName !== undefined) {
      const config = this.getCounterConfig(counterIdOrName);

      if (!config) {
        const availableCounters = this.#configs
          .map((c) => (c.name ? `${c.name} (${c.id})` : c.id.toString()))
          .join(', ');
        console.warn(
          `${libName}: –°—á–µ—Ç—á–∏–∫ "${counterIdOrName}" –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ—Å—Ç—É–ø–Ω—ã–µ: ${availableCounters}`,
        );
        return false;
      }

      return !!config.id && (!config.prodOnly || !isDevMode());
    }

    if (!this.#defaultConfig) {
      console.warn(`${libName}: –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω —Å—á–µ—Ç—á–∏–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é`);
      return false;
    }

    return !!this.#defaultConfig.id && (!this.#defaultConfig.prodOnly || !isDevMode());
  }

  private getCounterConfig(counterIdOrName: string | number): YMConfig | undefined {
    if (!this.#configs) return undefined;

    if (typeof counterIdOrName === 'number') {
      return this.#configs.find((config) => config.id === counterIdOrName);
    } else {
      return this.#configs.find((config) => config.name === counterIdOrName);
    }
  }
}
